// Go语言有一些不需要导入操作就可以使用的内置函数
// 下面是一个简单的列表，后面的章节中对他们进行逐个深入的讲解

// [close] 
// 用于管道通信

// [len]
// 用于返回某个类型的长度(字符串，数组，切片，字典和管道)

// [cap]
// 用于返回某个类型的最大容量(只用于切片和字典)

// [new]
// 用于分配内存，new 用于值类型和用户定义的类型,new是一个函数要加()
// new(T)分配类型T的零值并返回其地址，也就是指向类型T的指针
// 它也可以被用于基本类型 v:=new(int)

// [make]
// 用于内存分配
// make(T) 返回类型T的初始化之后的值，因此它比new进行更多的工作

// [copy,append]
// 用于复制，链接切片

// [panic,recover]
// 两者均用于错误处理机制

// [print,println]
// 底层打印函数 在部署环境中建议使用 fmt 包

// [complex,real imag]
// 用于创建和操作复数