package main

func main() {
	// Go是编译型语言，所以函数编写的顺序是无关紧要的
	// 但最好把 main() 函数写在文件的前面，其它的函数按照一定的逻辑顺序进行编写

	// Go 里面有三种类型的函数
	// 普通的带有名字的函数
	// 匿名函数 或者 lambda 函数
	// 方法(Methods)

	// 除了 main() init() 函数外，其它所有类型都可以有参数与返回值
	// 函数参数，返回值以及它们的类型 被统称为 函数签名
	
	// 函数被调用的基本格式
	// pack1.Function(arg1, arg2, ..., argn)

	// 函数可以将其它函数的调用作为它的参数
	// 前提是这个被调用的函数返回值个数，返回值类型与返回值顺序 与 调用函数所需要的实参是一致的
	// f1(a, b, c int) f2(a,b int) (int ,int ,int)
	// 则可以 f1(f2(a, b))

	// 函数可以申明的方式被使用，作为一个函数类型, 不需要函数体 {}
	type binOp func(int, int) int 

	// Go 没有泛型，不支持多种类型的函数
	// 可以通过接口(interface)
	// 或通过反射(reflection) 实现相似的功能
	// 但是这么做将会使代码复杂，性能更为低下
	// 所以非常注意性能的场景 最好是每个类型单独创建一个函数
}