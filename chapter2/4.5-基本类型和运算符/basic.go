package main

func main() {
	// [布尔型]
	var flag = true
	println(flag)

	// [比较]:必须两边的类型相同才能进行比较
	var num = 10
	println(num == 10)
	println(num != 10)

	// 值之间的比较十分严格 
	// 如果类型不同需要转换成相同的值类型

	// [数字类型]
	// [整型 int] [浮点型 float]
	// 整型默认值:0 浮点型默认值0.0

	// [整数]
	// int8（-128 -> 127）
	// int16（-32768 -> 32767）
	// int32（-2,147,483,648 -> 2,147,483,647）
	// int64（-9,223,372,036,854,775,808 -> 9,223,372,036,854,775,807）

	// [无符号整数]
	// uint8（0 -> 255）
	// uint16（0 -> 65,535）
	// uint32（0 -> 4,294,967,295）
	// uint64（0 -> 18,446,744,073,709,551,615）

	// [浮点型]
	// float32（+- 1e-45 -> +- 3.4 * 1e38） 精确到小数点后7 位
	// float64（+- 5 * 1e-324 -> 107 * 1e308）精确到小数点后15 位

	// [尽可能的使用 float64]

	// [进制表示法]
	// 如077  通过前缀0表示八进制
	// 如0xFF 通过前缀0x表示十六进制
	// 1e3 表示1x10的三次方，6.022e23表示6.022 x 10 的23次方

	// [类型转换 与 赋值操作同时进行]
	u := uint64(0)
	println(u)
}